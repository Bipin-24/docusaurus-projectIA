{
    "swagger" : "2.0",
    "info" : {
      "version" : "3.3.0-47",
      "title" : "Job Config Aliasing"
    },
    "host" : "api.im.actiandatacloud.com",
    "basePath" : "/v2/api",
    "tags" : [ {
      "name" : "@Login"
    }, {
      "name" : "Alias"
    }, {
      "name" : "Alias Access Control"
    }, {
      "name" : "Alias Firewall"
    }, {
      "name" : "Alias Firewall List Post"
    } ],
    "schemes" : [ "https" ],
    "paths" : {
      "/jobconfig-aliases" : {
        "get" : {
          "tags" : [ "Alias" ],
          "summary" : "Get a list of job config aliases",
          "description" : "",
          "operationId" : "getAliases",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "offset",
            "in" : "query",
            "description" : "Page number (zero based)",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "size",
            "in" : "query",
            "description" : "Page size",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "sortby",
            "in" : "query",
            "description" : "A comma delimited list of column names to sort the result set by. These may be specified as child fields, for example createdByUser.name",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "direction",
            "in" : "query",
            "description" : "A comma delimited list of sort directions (asc or desc) that coincide with the sortby parameters specified",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filter",
            "in" : "query",
            "description" : "Comma delimited filter values. Sets of values (for in or !in operations) should be pipe delimited. If only a filter is provided, with no filterBy or operators defined, then like will be used among a set of default columns. All date values should be provided in epoch numerical format",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filterby",
            "in" : "query",
            "description" : "A comma delimited list of property names to run the defined filter operations on. These may be child objects, such as createdByUser.name, and should coincide in order with the operators and filter(s) provided",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "operators",
            "in" : "query",
            "description" : "Filter operations. These may be either comma delimited to specify AND between operators, or pipe delimited to specify OR between operators. Parentheses can be used to specify order of operations. Valid operators include: eq, ne, lt, gt, lte, gte, in, !in, like, !like, null, or !null",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "permissions",
            "in" : "query",
            "description" : "Set to true to include current user's permissions for each object in response",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/AliasListResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "Alias" ],
          "summary" : "Create a job config alias",
          "description" : "created a new job config alias",
          "operationId" : "createAlias",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/AliasRequest"
            }
          } ],
          "responses" : {
            "201" : {
              "description" : "Created",
              "schema" : {
                "$ref" : "#/definitions/AliasResponse"
              }
            },
            "400" : {
              "description" : "Bad Request"
            },
            "401" : {
              "description" : "Unauthorized"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/jobconfig-aliases/{name}" : {
        "get" : {
          "tags" : [ "Alias" ],
          "summary" : "Get job config alias",
          "description" : "",
          "operationId" : "getAlias",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/AliasResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "put" : {
          "tags" : [ "Alias" ],
          "summary" : "Update job config alias",
          "description" : "",
          "operationId" : "updateAlias",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/AliasRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/AliasResponse"
              }
            },
            "400" : {
              "description" : "Bad Request"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "delete" : {
          "tags" : [ "Alias" ],
          "summary" : "Delete job config alias",
          "description" : "",
          "operationId" : "deleteAlias",
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/jobconfig-aliases/{name}/accesskey" : {
        "get" : {
          "tags" : [ "Alias Access Control" ],
          "summary" : "Get api key for the given alias",
          "description" : "",
          "operationId" : "getAliasApiKey",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/AliasAccessKeyResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "Alias Access Control" ],
          "summary" : "Generate an api key for the given alias",
          "description" : "generated an api key for the given alias",
          "operationId" : "createAliasApiKey",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "value",
            "in" : "query",
            "description" : "accessKey value",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "201" : {
              "description" : "Created",
              "schema" : {
                "$ref" : "#/definitions/AliasAccessKeyResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "put" : {
          "tags" : [ "Alias Access Control" ],
          "summary" : "Update an api key for the given alias",
          "description" : "updated an api key for the given alias",
          "operationId" : "updateAliasApiKey",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "value",
            "in" : "query",
            "description" : "accessKey value",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/AliasAccessKeyResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "delete" : {
          "tags" : [ "Alias Access Control" ],
          "summary" : "Revoke api key for the given alias",
          "description" : "",
          "operationId" : "revokeAliasApiKey",
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/jobconfig-aliases/{name}/allowed-ips" : {
        "get" : {
          "tags" : [ "Alias Firewall" ],
          "summary" : "Get a list of allowed IP addresses for a job config alias",
          "description" : "",
          "operationId" : "getAliasAllowedIps",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Page number (zero based)",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "size",
            "in" : "query",
            "description" : "Page size",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "sortby",
            "in" : "query",
            "description" : "A comma delimited list of column names to sort the result set by. These may be specified as child fields, for example createdByUser.name",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "direction",
            "in" : "query",
            "description" : "A comma delimited list of sort directions (asc or desc) that coincide with the sortby parameters specified",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filter",
            "in" : "query",
            "description" : "Comma delimited filter values. Sets of values (for in or !in operations) should be pipe delimited. If only a filter is provided, with no filterBy or operators defined, then like will be used among a set of default columns. All date values should be provided in epoch numerical format",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filterby",
            "in" : "query",
            "description" : "A comma delimited list of property names to run the defined filter operations on. These may be child objects, such as createdByUser.name, and should coincide in order with the operators and filter(s) provided",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "operators",
            "in" : "query",
            "description" : "Filter operations. These may be either comma delimited to specify AND between operators, or pipe delimited to specify OR between operators. Parentheses can be used to specify order of operations. Valid operators include: eq, ne, lt, gt, lte, gte, in, !in, like, !like, null, or !null",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/AliasAllowedIpResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "Alias Firewall List Post" ],
          "summary" : "Adds an allowed IP address, or updates the label for an allowed IP address for a job config alias",
          "description" : "created a new allowed IP address",
          "operationId" : "putAliasAllowedIp",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/AliasAllowedIpRequest"
            }
          } ],
          "responses" : {
            "201" : {
              "description" : "Created",
              "schema" : {
                "$ref" : "#/definitions/AliasAllowedIp"
              }
            },
            "400" : {
              "description" : "Bad Request"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/jobconfig-aliases/{name}/allowed-ips/{id}" : {
        "delete" : {
          "tags" : [ "Alias Firewall" ],
          "summary" : "Delete an allowed IP for a job config alias",
          "description" : "",
          "operationId" : "deleteAliasAllowedIp",
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "id",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "schema" : {
                "type" : "object"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/jobconfig-aliases/{name}/secretkey" : {
        "get" : {
          "tags" : [ "Alias Access Control" ],
          "summary" : "Get api secret for the given alias",
          "description" : "",
          "operationId" : "getAliasApiSecret",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/AliasSecretKeyResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "Alias Access Control" ],
          "summary" : "Generate an api secret key for the given alias",
          "description" : "generated an api secret key for the given alias",
          "operationId" : "createAliasApiSecret",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "value",
            "in" : "query",
            "description" : "secretKey value",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "201" : {
              "description" : "Created",
              "schema" : {
                "$ref" : "#/definitions/AliasSecretKeyResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "put" : {
          "tags" : [ "Alias Access Control" ],
          "summary" : "Update an api secret key for the given alias",
          "description" : "updated an api secret key for the given alias",
          "operationId" : "updateAliasApiSecret",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "value",
            "in" : "query",
            "description" : "secretKey value",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK"
            },
            "201" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/AliasSecretKeyResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "delete" : {
          "tags" : [ "Alias Access Control" ],
          "summary" : "Revoke api key for the given alias",
          "description" : "",
          "operationId" : "revokeAliasApiSecret",
          "parameters" : [ {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/login" : {
        "post" : {
          "tags" : [ "@Login" ],
          "summary" : "Retrieve an access_token",
          "description" : "The access_token value is used in the Authorization header in the format 'Authorization: Bearer [access_token value]' to make other API calls.",
          "operationId" : "login",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/LoginRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Access Token",
              "schema" : {
                "$ref" : "#/definitions/AccessTokenResponse"
              }
            },
            "400" : {
              "description" : "Bad Request"
            },
            "401" : {
              "description" : "Inactive, Bad Credentials, or Locked Out"
            }
          }
        }
      },
      "/product/info" : {
        "get" : {
          "tags" : [ "@Login" ],
          "summary" : "Retrieve detailed product information",
          "description" : "",
          "operationId" : "getProductInfo",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/InstalledProductInfo"
              }
            }
          }
        }
      }
    },
    "securityDefinitions" : {
      "Bearer token" : {
        "description" : "Enter access_token value from Login. Use format 'Bearer [access_token value]'.",
        "type" : "apiKey",
        "name" : "authorization",
        "in" : "header"
      }
    },
    "definitions" : {
      "AccessTokenResponse" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string"
          },
          "token_type" : {
            "type" : "string"
          },
          "expires_in" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "AliasAccessKeyResponse" : {
        "type" : "object",
        "properties" : {
          "aliasName" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          }
        }
      },
      "AliasAllowedIp" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "ip" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "created" : {
            "type" : "integer",
            "format" : "int64"
          },
          "createdById" : {
            "type" : "string"
          },
          "createdByName" : {
            "type" : "string"
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedById" : {
            "type" : "string"
          },
          "lastModifiedByName" : {
            "type" : "string"
          }
        }
      },
      "AliasAllowedIpRequest" : {
        "type" : "object",
        "properties" : {
          "ip" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          }
        }
      },
      "AliasAllowedIpResponse" : {
        "type" : "object",
        "properties" : {
          "totalRecords" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortBy" : {
            "type" : "string"
          },
          "direction" : {
            "type" : "string"
          },
          "filter" : {
            "$ref" : "#/definitions/FilterRequest"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AliasAllowedIp"
            }
          },
          "links" : {
            "$ref" : "#/definitions/ListLink"
          },
          "filterRequest" : {
            "$ref" : "#/definitions/FilterRequest"
          },
          "aliasName" : {
            "type" : "string"
          }
        }
      },
      "AliasListResponse" : {
        "type" : "object",
        "properties" : {
          "totalRecords" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortBy" : {
            "type" : "string"
          },
          "direction" : {
            "type" : "string"
          },
          "filter" : {
            "$ref" : "#/definitions/FilterRequest"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AliasResponse"
            }
          },
          "links" : {
            "$ref" : "#/definitions/ListLink"
          },
          "filterRequest" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        }
      },
      "AliasRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "jobConfigId" : {
            "type" : "string"
          },
          "secure" : {
            "type" : "boolean"
          },
          "allowlist" : {
            "type" : "boolean"
          }
        }
      },
      "AliasResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdByUser" : {
            "$ref" : "#/definitions/Reference"
          },
          "lastModified" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedByUser" : {
            "$ref" : "#/definitions/Reference"
          },
          "allowed" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "jobConfigId" : {
            "type" : "string"
          },
          "secure" : {
            "type" : "boolean"
          },
          "allowlist" : {
            "type" : "boolean"
          },
          "jobConfig" : {
            "$ref" : "#/definitions/Reference"
          },
          "account" : {
            "$ref" : "#/definitions/Reference"
          },
          "permissions" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AliasSecretKeyResponse" : {
        "type" : "object",
        "properties" : {
          "aliasName" : {
            "type" : "string"
          },
          "secretKey" : {
            "type" : "string"
          }
        }
      },
      "FilterRequest" : {
        "type" : "object",
        "properties" : {
          "and" : {
            "type" : "boolean",
            "example" : true
          },
          "or" : {
            "type" : "boolean",
            "example" : false
          },
          "filters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OperationRequest"
            }
          },
          "subfilters" : {
            "type" : "array",
            "example" : "[{\"and\":true,\"operations\":\"More filters can go here (recursive)\"}]",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "InstalledProductInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "copyright" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "buildDate" : {
            "type" : "string"
          }
        }
      },
      "ListLink" : {
        "type" : "object",
        "properties" : {
          "prev" : {
            "type" : "string"
          },
          "next" : {
            "type" : "string"
          }
        }
      },
      "LoginRequest" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "OperationRequest" : {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "example" : "id"
          },
          "object" : {
            "type" : "string",
            "example" : "jobConfig"
          },
          "operator" : {
            "type" : "string",
            "example" : "=",
            "enum" : [ "\"=\"", "\"eq\"", "\"!=\"", "\"ne\"", "\"<\"", "\"lt\"", "\"<=\"", "\"lte\"", "\">\"", "\"gt\"", "\">=\"", "\"gte\"", "\"subquery\"", "\"in\"", "\"!in\"", "\"null\"", "\"!null\"", "\"contains\"", "\"!contains\"", "\"none\"" ]
          },
          "value" : {
            "type" : "object",
            "example" : "value"
          },
          "values" : {
            "type" : "array",
            "example" : "[1,2]",
            "uniqueItems" : true,
            "items" : {
              "type" : "object"
            }
          },
          "in" : {
            "$ref" : "#/definitions/FilterRequest"
          },
          "date" : {
            "type" : "string"
          }
        }
      },
      "Reference" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          }
        }
      }
    }
  }