{
    "swagger" : "2.0",
    "info" : {
      "version" : "3.3.0-47",
      "title" : "Integration Components"
    },
    "host" : "api.im.actiandatacloud.com",
    "basePath" : "/v2/api",
    "tags" : [ {
      "name" : "@Login"
    }, {
      "name" : "Artifacts"
    }, {
      "name" : "Integration Projects"
    }, {
      "name" : "MacroSets"
    } ],
    "schemes" : [ "https" ],
    "paths" : {
      "/artifacts" : {
        "get" : {
          "tags" : [ "Artifacts" ],
          "summary" : "List available artifact options",
          "description" : "",
          "operationId" : "getArtifactOptions",
          "produces" : [ "application/json" ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/artifacts/{type}" : {
        "get" : {
          "tags" : [ "Artifacts" ],
          "summary" : "List available artifacts by type",
          "description" : "",
          "operationId" : "listArtifactFilesByType",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "type",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "locale",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "en_US"
          }, {
            "name" : "filter",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/FileListResponse"
              }
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/artifacts/{type}/{name}" : {
        "get" : {
          "tags" : [ "Artifacts" ],
          "summary" : "Download an artifact",
          "description" : "",
          "operationId" : "getArtifactFile",
          "parameters" : [ {
            "name" : "type",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "locale",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "en_US"
          } ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "Artifacts" ],
          "summary" : "Create a new artifact",
          "description" : "",
          "operationId" : "createArtifactFile",
          "consumes" : [ "multipart/form-data" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "type",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "locale",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "shared",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          }, {
            "name" : "file",
            "in" : "formData",
            "required" : true,
            "type" : "file"
          } ],
          "responses" : {
            "201" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/FileResponse"
              }
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "put" : {
          "tags" : [ "Artifacts" ],
          "summary" : "Update an existing artifact",
          "description" : "",
          "operationId" : "updateArtifactFile",
          "consumes" : [ "multipart/form-data" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "type",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "locale",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "file",
            "in" : "formData",
            "required" : true,
            "type" : "file"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/FileResponse"
              }
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "delete" : {
          "tags" : [ "Artifacts" ],
          "summary" : "Delete an existing artifact",
          "description" : "",
          "operationId" : "deleteArtifactFile",
          "parameters" : [ {
            "name" : "type",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "locale",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/artifacts/{type}/{name}/share" : {
        "patch" : {
          "tags" : [ "Artifacts" ],
          "summary" : "Share a private artifact",
          "description" : "",
          "operationId" : "shareArtifactFile",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "type",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "locale",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/FileResponse"
              }
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/artifacts/{type}/{name}/unshare" : {
        "patch" : {
          "tags" : [ "Artifacts" ],
          "summary" : "Share a private artifact",
          "description" : "",
          "operationId" : "unshareArtifactFile",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "type",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "locale",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/FileResponse"
              }
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/integrations" : {
        "get" : {
          "tags" : [ "Integration Projects" ],
          "summary" : "List Integration Projects",
          "description" : "",
          "operationId" : "listIntegrationProjects",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "offset",
            "in" : "query",
            "description" : "Page number (zero based)",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "size",
            "in" : "query",
            "description" : "Page size",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "sortby",
            "in" : "query",
            "description" : "A comma delimited list of column names to sort the result set by. These may be specified as child fields, for example createdByUser.name",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "direction",
            "in" : "query",
            "description" : "A comma delimited list of sort directions (asc or desc) that coincide with the sortby parameters specified",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filter",
            "in" : "query",
            "description" : "Comma delimited filter values. Sets of values (for in or !in operations) should be pipe delimited. If only a filter is provided, with no filterBy or operators defined, then like will be used among a set of default columns. All date values should be provided in epoch numerical format",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filterby",
            "in" : "query",
            "description" : "A comma delimited list of property names to run the defined filter operations on. These may be child objects, such as createdByUser.name, and should coincide in order with the operators and filter(s) provided",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "operators",
            "in" : "query",
            "description" : "Filter operations. These may be either comma delimited to specify AND between operators, or pipe delimited to specify OR between operators. Parentheses can be used to specify order of operations. Valid operators include: eq, ne, lt, gt, lte, gte, in, !in, like, !like, null, or !null",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/IntegrationProjectListResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/integrations/{id}" : {
        "get" : {
          "tags" : [ "Integration Projects" ],
          "summary" : "Retrieve Integration Project",
          "description" : "",
          "operationId" : "getIntegrationProject",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "Integration Project Id",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/IntegrationProjectResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            },
            "404" : {
              "description" : "Not Found"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "put" : {
          "tags" : [ "Integration Projects" ],
          "summary" : "Update Integration Projects",
          "description" : "",
          "operationId" : "updateIntegrationProject",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "Integration Project Id",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/IntegrationProjectRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/IntegrationProjectResponse"
              }
            },
            "400" : {
              "description" : "Bad Request"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/integrations/{id}/files" : {
        "post" : {
          "tags" : [ "Integration Projects" ],
          "summary" : "Create Integration Project file",
          "description" : "",
          "operationId" : "createIntegrationProjectFile",
          "consumes" : [ "multipart/form-data" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "Integration Project Id",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "filename",
            "in" : "query",
            "description" : "Integration Project filename",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "file",
            "in" : "formData",
            "description" : "Integration Project file",
            "required" : true,
            "type" : "file"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/FileResponse"
              }
            },
            "201" : {
              "description" : "Created",
              "schema" : {
                "$ref" : "#/definitions/FileResponse"
              }
            },
            "400" : {
              "description" : "Bad Request"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/integrations/{id}/files/{filename}" : {
        "get" : {
          "tags" : [ "Integration Projects" ],
          "summary" : "Get Integration Project file by name",
          "description" : "",
          "operationId" : "getIntegrationProjectFile",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "Integration Project Id",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "filename",
            "in" : "path",
            "description" : "Integration Project filename",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "put" : {
          "tags" : [ "Integration Projects" ],
          "summary" : "Update Integration Project file",
          "description" : "",
          "operationId" : "updateIntegrationProjectFile",
          "consumes" : [ "multipart/form-data" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "Integration Project Id",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "filename",
            "in" : "path",
            "description" : "Integration Project filename",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "file",
            "in" : "formData",
            "description" : "Integration Project file",
            "required" : true,
            "type" : "file"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/FileResponse"
              }
            },
            "400" : {
              "description" : "Bad Request"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "delete" : {
          "tags" : [ "Integration Projects" ],
          "summary" : "Delete Integration Project file",
          "description" : "",
          "operationId" : "deleteIntegrationProjectFile",
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "Integration Project Id",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "filename",
            "in" : "path",
            "description" : "Integration Project filename",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/login" : {
        "post" : {
          "tags" : [ "@Login" ],
          "summary" : "Retrieve an access_token",
          "description" : "The access_token value is used in the Authorization header in the format 'Authorization: Bearer [access_token value]' to make other API calls.",
          "operationId" : "login",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/LoginRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Access Token",
              "schema" : {
                "$ref" : "#/definitions/AccessTokenResponse"
              }
            },
            "400" : {
              "description" : "Bad Request"
            },
            "401" : {
              "description" : "Inactive, Bad Credentials, or Locked Out"
            }
          }
        }
      },
      "/macrodef" : {
        "get" : {
          "tags" : [ "MacroSets" ],
          "summary" : "Export one or more MacroSets to MacroDef Json file",
          "description" : "",
          "operationId" : "exportMacroDef",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "names",
            "in" : "query",
            "description" : "MacroSet Names to include",
            "required" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/MacroSetsResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            },
            "404" : {
              "description" : "Not Found"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "MacroSets" ],
          "summary" : "Import MacroDef Json file (to one or more MacroSets)",
          "description" : "",
          "operationId" : "importMacroDef",
          "consumes" : [ "multipart/form-data" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "file",
            "in" : "formData",
            "description" : "MacroDef Json file",
            "required" : true,
            "type" : "file"
          }, {
            "name" : "replace",
            "in" : "query",
            "description" : "Replace existing macro values",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "shared",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/ImportMacroDefResponse"
              }
            },
            "400" : {
              "description" : "Bad Request"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/macrosets" : {
        "get" : {
          "tags" : [ "MacroSets" ],
          "summary" : "List MacroSets",
          "description" : "",
          "operationId" : "listMacroSets",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "offset",
            "in" : "query",
            "description" : "Page number (zero based)",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "size",
            "in" : "query",
            "description" : "Page size",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "sortby",
            "in" : "query",
            "description" : "A comma delimited list of column names to sort the result set by. These may be specified as child fields, for example createdByUser.name",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "direction",
            "in" : "query",
            "description" : "A comma delimited list of sort directions (asc or desc) that coincide with the sortby parameters specified",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filter",
            "in" : "query",
            "description" : "Comma delimited filter values. Sets of values (for in or !in operations) should be pipe delimited. If only a filter is provided, with no filterBy or operators defined, then like will be used among a set of default columns. All date values should be provided in epoch numerical format",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filterby",
            "in" : "query",
            "description" : "A comma delimited list of property names to run the defined filter operations on. These may be child objects, such as createdByUser.name, and should coincide in order with the operators and filter(s) provided",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "operators",
            "in" : "query",
            "description" : "Filter operations. These may be either comma delimited to specify AND between operators, or pipe delimited to specify OR between operators. Parentheses can be used to specify order of operations. Valid operators include: eq, ne, lt, gt, lte, gte, in, !in, like, !like, null, or !null",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/MacroSetListResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "MacroSets" ],
          "summary" : "Create a MacroSet",
          "description" : "",
          "operationId" : "createMacroSet",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/MacroSetRequest"
            }
          } ],
          "responses" : {
            "201" : {
              "description" : "Created",
              "schema" : {
                "$ref" : "#/definitions/MacroSetResponse"
              }
            },
            "400" : {
              "description" : "Bad Request"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            },
            "409" : {
              "description" : "Conflict"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/macrosets/{id}" : {
        "get" : {
          "tags" : [ "MacroSets" ],
          "summary" : "Retrieve MacroSet",
          "description" : "",
          "operationId" : "getMacroSet",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "MacroSet Id",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/MacroSetResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            },
            "404" : {
              "description" : "Not Found"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "put" : {
          "tags" : [ "MacroSets" ],
          "summary" : "Update an existing MacroSet",
          "description" : "",
          "operationId" : "updateMacroSet",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "MacroSet Id",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/MacroSetRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/MacroSetResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            },
            "404" : {
              "description" : "Not Found"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "delete" : {
          "tags" : [ "MacroSets" ],
          "summary" : "Delete an existing MacroSet",
          "description" : "",
          "operationId" : "deleteMacroSet",
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "MacroSet Id",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "204" : {
              "description" : ""
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/macrosets/{id}/macros" : {
        "get" : {
          "tags" : [ "MacroSets" ],
          "summary" : "List Macros for this MacroSet",
          "description" : "",
          "operationId" : "listMacroSetMacros",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Page number (zero based)",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "size",
            "in" : "query",
            "description" : "Page size",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "sortby",
            "in" : "query",
            "description" : "A comma delimited list of column names to sort the result set by. These may be specified as child fields, for example createdByUser.name",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "direction",
            "in" : "query",
            "description" : "A comma delimited list of sort directions (asc or desc) that coincide with the sortby parameters specified",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filter",
            "in" : "query",
            "description" : "Comma delimited filter values. Sets of values (for in or !in operations) should be pipe delimited. If only a filter is provided, with no filterBy or operators defined, then like will be used among a set of default columns. All date values should be provided in epoch numerical format",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filterby",
            "in" : "query",
            "description" : "A comma delimited list of property names to run the defined filter operations on. These may be child objects, such as createdByUser.name, and should coincide in order with the operators and filter(s) provided",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "operators",
            "in" : "query",
            "description" : "Filter operations. These may be either comma delimited to specify AND between operators, or pipe delimited to specify OR between operators. Parentheses can be used to specify order of operations. Valid operators include: eq, ne, lt, gt, lte, gte, in, !in, like, !like, null, or !null",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/MacroListResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            },
            "404" : {
              "description" : "Not Found"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "MacroSets" ],
          "summary" : "Create a MacroSet Macro",
          "description" : "",
          "operationId" : "createMacroSetMacro",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "MacroSet Id",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/MacroRequest"
            }
          } ],
          "responses" : {
            "201" : {
              "description" : "Created",
              "schema" : {
                "$ref" : "#/definitions/MacroResponse"
              }
            },
            "400" : {
              "description" : "Bad Request"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            },
            "404" : {
              "description" : "Not Found"
            },
            "409" : {
              "description" : "Conflict"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/macrosets/{id}/macros/{macroname}" : {
        "get" : {
          "tags" : [ "MacroSets" ],
          "summary" : "Retrieve a MacroSet Macro",
          "description" : "",
          "operationId" : "getMacroSetMacro",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "MacroSet Id",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "macroname",
            "in" : "path",
            "description" : "Macro name",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/MacroResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            },
            "404" : {
              "description" : "Not Found"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "put" : {
          "tags" : [ "MacroSets" ],
          "summary" : "Update a MacroSet Macro",
          "description" : "",
          "operationId" : "updateMacroSetMacro",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "MacroSet Id",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "macroname",
            "in" : "path",
            "description" : "Macro name",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/MacroRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/MacroResponse"
              }
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            },
            "404" : {
              "description" : "Not Found"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        },
        "delete" : {
          "tags" : [ "MacroSets" ],
          "summary" : "Delete a MacroSet Macro",
          "description" : "",
          "operationId" : "deleteMacroSetMacro",
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "MacroSet Id",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "macroname",
            "in" : "path",
            "description" : "Macro name",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content"
            },
            "401" : {
              "description" : "Unauthorized"
            },
            "403" : {
              "description" : "Access Denied"
            },
            "404" : {
              "description" : "Not Found"
            }
          },
          "security" : [ {
            "Bearer token" : [ ]
          } ]
        }
      },
      "/product/info" : {
        "get" : {
          "tags" : [ "@Login" ],
          "summary" : "Retrieve detailed product information",
          "description" : "",
          "operationId" : "getProductInfo",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "schema" : {
                "$ref" : "#/definitions/InstalledProductInfo"
              }
            }
          }
        }
      }
    },
    "securityDefinitions" : {
      "Bearer token" : {
        "description" : "Enter access_token value from Login. Use format 'Bearer [access_token value]'.",
        "type" : "apiKey",
        "name" : "authorization",
        "in" : "header"
      }
    },
    "definitions" : {
      "AccessTokenResponse" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string"
          },
          "token_type" : {
            "type" : "string"
          },
          "expires_in" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "FileListResponse" : {
        "type" : "object",
        "properties" : {
          "totalRecords" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortBy" : {
            "type" : "string"
          },
          "direction" : {
            "type" : "string"
          },
          "filter" : {
            "$ref" : "#/definitions/FilterRequest"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/FileResponse"
            }
          },
          "links" : {
            "$ref" : "#/definitions/ListLink"
          },
          "filterRequest" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        }
      },
      "FileMetaData" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModified" : {
            "type" : "string",
            "format" : "date-time"
          },
          "contentType" : {
            "type" : "string"
          },
          "entityType" : {
            "type" : "string",
            "enum" : [ "ACCOUNT", "GROUP", "USER", "PROVISIONING", "LICENSE", "JOBTEMPLATE", "JOBCONFIG", "JOB", "JOB_OUTPUT", "TEMP", "AGENT", "INTEGRATION", "DRIVER" ]
          },
          "entityId" : {
            "type" : "string"
          },
          "linkType" : {
            "type" : "string",
            "enum" : [ "LINK", "INHERITED", "LOCAL" ]
          },
          "linkId" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "FileResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "linkId" : {
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/definitions/FileMetaData"
          }
        }
      },
      "FilterRequest" : {
        "type" : "object",
        "properties" : {
          "and" : {
            "type" : "boolean",
            "example" : true
          },
          "or" : {
            "type" : "boolean",
            "example" : false
          },
          "filters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OperationRequest"
            }
          },
          "subfilters" : {
            "type" : "array",
            "example" : "[{\"and\":true,\"operations\":\"More filters can go here (recursive)\"}]",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "ImportMacroDefResponse" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalKeysRead" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalKeysCreated" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalKeysUpdated" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalExistingKeys" : {
            "type" : "integer",
            "format" : "int32"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/MacroMergeResponse"
            }
          }
        }
      },
      "InstalledProductInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "copyright" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "buildDate" : {
            "type" : "string"
          }
        }
      },
      "IntegrationProjectListResponse" : {
        "type" : "object",
        "properties" : {
          "totalRecords" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortBy" : {
            "type" : "string"
          },
          "direction" : {
            "type" : "string"
          },
          "filter" : {
            "$ref" : "#/definitions/FilterRequest"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/IntegrationProjectResponse"
            }
          },
          "links" : {
            "$ref" : "#/definitions/ListLink"
          },
          "filterRequest" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        }
      },
      "IntegrationProjectRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "runtimeConfig" : {
            "$ref" : "#/definitions/RuntimeConfig"
          },
          "macrosets" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "IntegrationProjectResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "visibility" : {
            "type" : "string"
          },
          "jobConfigId" : {
            "type" : "string"
          },
          "destinationId" : {
            "type" : "string"
          },
          "runtimeConfig" : {
            "$ref" : "#/definitions/RuntimeConfig"
          },
          "macrosets" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ListLink" : {
        "type" : "object",
        "properties" : {
          "prev" : {
            "type" : "string"
          },
          "next" : {
            "type" : "string"
          }
        }
      },
      "LoginRequest" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "Macro" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "secure" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          }
        }
      },
      "MacroListResponse" : {
        "type" : "object",
        "properties" : {
          "totalRecords" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortBy" : {
            "type" : "string"
          },
          "direction" : {
            "type" : "string"
          },
          "filter" : {
            "$ref" : "#/definitions/FilterRequest"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/MacroResponse"
            }
          },
          "links" : {
            "$ref" : "#/definitions/ListLink"
          },
          "filterRequest" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        }
      },
      "MacroMergeResponse" : {
        "type" : "object",
        "properties" : {
          "macroSet" : {
            "$ref" : "#/definitions/MacroSetResponse"
          },
          "keysRead" : {
            "type" : "integer",
            "format" : "int32"
          },
          "keysCreated" : {
            "type" : "integer",
            "format" : "int32"
          },
          "keysUpdated" : {
            "type" : "integer",
            "format" : "int32"
          },
          "existingKeys" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MacroRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "secure" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "MacroResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdByUser" : {
            "$ref" : "#/definitions/Reference"
          },
          "lastModified" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedByUser" : {
            "$ref" : "#/definitions/Reference"
          },
          "allowed" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "value" : {
            "type" : "string"
          },
          "secure" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "MacroSet" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "macros" : {
            "$ref" : "#/definitions/Macros"
          }
        }
      },
      "MacroSetListResponse" : {
        "type" : "object",
        "properties" : {
          "totalRecords" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortBy" : {
            "type" : "string"
          },
          "direction" : {
            "type" : "string"
          },
          "filter" : {
            "$ref" : "#/definitions/FilterRequest"
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/MacroSetResponse"
            }
          },
          "links" : {
            "$ref" : "#/definitions/ListLink"
          },
          "filterRequest" : {
            "$ref" : "#/definitions/FilterRequest"
          }
        }
      },
      "MacroSetRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "visibility" : {
            "type" : "string"
          }
        }
      },
      "MacroSetResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "visibility" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          }
        }
      },
      "MacroSetsResponse" : {
        "type" : "object",
        "properties" : {
          "macroSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/MacroSet"
            }
          }
        }
      },
      "Macros" : {
        "type" : "object",
        "properties" : {
          "macro" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Macro"
            }
          }
        }
      },
      "OperationRequest" : {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "example" : "id"
          },
          "object" : {
            "type" : "string",
            "example" : "jobConfig"
          },
          "operator" : {
            "type" : "string",
            "example" : "=",
            "enum" : [ "\"=\"", "\"eq\"", "\"!=\"", "\"ne\"", "\"<\"", "\"lt\"", "\"<=\"", "\"lte\"", "\">\"", "\"gt\"", "\">=\"", "\"gte\"", "\"subquery\"", "\"in\"", "\"!in\"", "\"null\"", "\"!null\"", "\"contains\"", "\"!contains\"", "\"none\"" ]
          },
          "value" : {
            "type" : "object",
            "example" : "value"
          },
          "values" : {
            "type" : "array",
            "example" : "[1,2]",
            "uniqueItems" : true,
            "items" : {
              "type" : "object"
            }
          },
          "in" : {
            "$ref" : "#/definitions/FilterRequest"
          },
          "date" : {
            "type" : "string"
          }
        }
      },
      "Property" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "Reference" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "RuntimeConfig" : {
        "type" : "object",
        "properties" : {
          "packageName" : {
            "type" : "string"
          },
          "entryPoint" : {
            "type" : "string"
          },
          "logLevel" : {
            "type" : "string"
          },
          "packageArtifactOverride" : {
            "type" : "boolean"
          },
          "packageEntityType" : {
            "type" : "string"
          },
          "packageEntityId" : {
            "type" : "string"
          },
          "packagePrefix" : {
            "type" : "string"
          },
          "macros" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Macro"
            }
          },
          "inMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TextMessage"
            }
          },
          "outMessageNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "TextMessage" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "body" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Property"
            }
          },
          "href" : {
            "type" : "string"
          }
        }
      }
    }
  }