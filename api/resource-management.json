{
  "swagger" : "2.0",
  "info" : {
    "version" : "3.3.0-47",
    "title" : "Resource Management"
  },
  "host" : "api.im.actiandatacloud.com",
  "basePath" : "/v2/api",
  "tags" : [ {
    "name" : "@Login"
  }, {
    "name" : "Resource Management"
  }, {
    "name" : "Resource Webhook Scheduling"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/login" : {
      "post" : {
        "tags" : [ "@Login" ],
        "summary" : "Retrieve an access_token",
        "description" : "The access_token value is used in the Authorization header in the format 'Authorization: Bearer [access_token value]' to make other API calls.",
        "operationId" : "login",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoginRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Access Token",
            "schema" : {
              "$ref" : "#/definitions/AccessTokenResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Inactive, Bad Credentials, or Locked Out"
          }
        }
      }
    },
    "/product/info" : {
      "get" : {
        "tags" : [ "@Login" ],
        "summary" : "Retrieve detailed product information",
        "description" : "",
        "operationId" : "getProductInfo",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InstalledProductInfo"
            }
          }
        }
      }
    },
    "/resources/{type}" : {
      "get" : {
        "tags" : [ "Resource Management" ],
        "summary" : "Retrieve a list of resources of the given type.",
        "description" : "",
        "operationId" : "getResources",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Page number (zero based)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortby",
          "in" : "query",
          "description" : "A comma delimited list of column names to sort the result set by. These may be specified as child fields, for example createdByUser.name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "A comma delimited list of sort directions (asc or desc) that coincide with the sortby parameters specified",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter (resource ID)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filterby",
          "in" : "query",
          "description" : "A comma delimited list of property names to run the defined filter operations on. These may be child objects, such as createdByUser.name, and should coincide in order with the operators and filter(s) provided",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "operators",
          "in" : "query",
          "description" : "Filter operations. These may be either comma delimited to specify AND between operators, or pipe delimited to specify OR between operators. Parentheses can be used to specify order of operations. Valid operators include: eq, ne, lt, gt, lte, gte, in, !in, like, !like, null, or !null",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ResourceListResponse"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Resource Management" ],
        "summary" : "Create a resource of the given type.",
        "description" : "",
        "operationId" : "createResource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ResourceRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/ResourceResponse"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      }
    },
    "/resources/{type}/authorize" : {
      "get" : {
        "tags" : [ "Resource Management" ],
        "summary" : "Check access control entries related to a resource type action, i.e. create resource.",
        "description" : "",
        "operationId" : "whyIsAuthorized",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "action",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userid",
          "in" : "query",
          "description" : "userid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Page number (zero based)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortby",
          "in" : "query",
          "description" : "A comma delimited list of column names to sort the result set by. These may be specified as child fields, for example createdByUser.name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "A comma delimited list of sort directions (asc or desc) that coincide with the sortby parameters specified",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter (resource ID)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filterby",
          "in" : "query",
          "description" : "A comma delimited list of property names to run the defined filter operations on. These may be child objects, such as createdByUser.name, and should coincide in order with the operators and filter(s) provided",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "operators",
          "in" : "query",
          "description" : "Filter operations. These may be either comma delimited to specify AND between operators, or pipe delimited to specify OR between operators. Parentheses can be used to specify order of operations. Valid operators include: eq, ne, lt, gt, lte, gte, in, !in, like, !like, null, or !null",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AclResponseList"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "Resource Management" ],
        "summary" : "Check access to a resource type action, i.e. create resource.",
        "description" : "",
        "operationId" : "isAuthorized",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      }
    },
    "/resources/{type}/{id}" : {
      "get" : {
        "tags" : [ "Resource Management" ],
        "summary" : "Retrieve a resource of the given type.",
        "description" : "",
        "operationId" : "getResource",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Resource id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ResourceResponse"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Resource Management" ],
        "summary" : "Update an existing resource.",
        "description" : "",
        "operationId" : "updateResource",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Resource id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ResourceRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ResourceResponse"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Resource Management" ],
        "summary" : "Delete a resource of the given type.",
        "description" : "",
        "operationId" : "deleteResource",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Resource id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      }
    },
    "/resources/{type}/{id}/authorize" : {
      "get" : {
        "tags" : [ "Resource Management" ],
        "summary" : "Check access control entries related to a resource id action, i.e. read resource, edit resource, delete resource.",
        "description" : "",
        "operationId" : "whyIsAuthorized",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Resource id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "action",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userid",
          "in" : "query",
          "description" : "userid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Page number (zero based)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortby",
          "in" : "query",
          "description" : "A comma delimited list of column names to sort the result set by. These may be specified as child fields, for example createdByUser.name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "A comma delimited list of sort directions (asc or desc) that coincide with the sortby parameters specified",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter (resource ID)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filterby",
          "in" : "query",
          "description" : "A comma delimited list of property names to run the defined filter operations on. These may be child objects, such as createdByUser.name, and should coincide in order with the operators and filter(s) provided",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "operators",
          "in" : "query",
          "description" : "Filter operations. These may be either comma delimited to specify AND between operators, or pipe delimited to specify OR between operators. Parentheses can be used to specify order of operations. Valid operators include: eq, ne, lt, gt, lte, gte, in, !in, like, !like, null, or !null",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AclResponseList"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "Resource Management" ],
        "summary" : "Check access to a resource id action, i.e. read resource, edit resource, delete resource.",
        "description" : "",
        "operationId" : "isAuthorized",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Resource id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      }
    },
    "/resources/{type}/{id}/schedules" : {
      "post" : {
        "tags" : [ "Resource Webhook Scheduling" ],
        "summary" : "Create a resource schedule, e.g. warehouses",
        "description" : "",
        "operationId" : "createSchedule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Resource id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "ScheduleRequest",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ScheduleRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/ScheduleResponse"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      }
    },
    "/resources/{type}/{id}/schedules/" : {
      "get" : {
        "tags" : [ "Resource Webhook Scheduling" ],
        "summary" : "Retrieve a list of schedules associated with a resource",
        "description" : "",
        "operationId" : "listSchedules",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Resource id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Page number (zero based)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Page size",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortby",
          "in" : "query",
          "description" : "A comma delimited list of column names to sort the result set by. These may be specified as child fields, for example createdByUser.name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "A comma delimited list of sort directions (asc or desc) that coincide with the sortby parameters specified",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Comma delimited filter values. Sets of values (for in or !in operations) should be pipe delimited. If only a filter is provided, with no filterBy or operators defined, then like will be used among a set of default columns. All date values should be provided in epoch numerical format",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filterby",
          "in" : "query",
          "description" : "A comma delimited list of property names to run the defined filter operations on. These may be child objects, such as createdByUser.name, and should coincide in order with the operators and filter(s) provided",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "operators",
          "in" : "query",
          "description" : "Filter operations. These may be either comma delimited to specify AND between operators, or pipe delimited to specify OR between operators. Parentheses can be used to specify order of operations. Valid operators include: eq, ne, lt, gt, lte, gte, in, !in, like, !like, null, or !null",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ScheduleResponseList"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      }
    },
    "/resources/{type}/{id}/schedules/{name}" : {
      "put" : {
        "tags" : [ "Resource Webhook Scheduling" ],
        "summary" : "Update a resource schedule",
        "description" : "",
        "operationId" : "updateSchedule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Resource id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "Schedule key",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "ScheduleRequest",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ScheduleRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ScheduleResponse"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      }
    },
    "/resources/{type}/{id}/schedules/{scheduleKey}" : {
      "get" : {
        "tags" : [ "Resource Webhook Scheduling" ],
        "summary" : "Retrieve a resource schedule by schedule key",
        "description" : "",
        "operationId" : "getSchedule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Resource id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "scheduleKey",
          "in" : "path",
          "description" : "Schedule key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ScheduleResponse"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Resource Webhook Scheduling" ],
        "summary" : "Delete a resource schedule",
        "description" : "",
        "operationId" : "deleteSchedule",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "Resource type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Resource id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "scheduleKey",
          "in" : "path",
          "description" : "Schedule key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "Bearer token" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "Bearer token" : {
      "description" : "Enter access_token value from Login. Use format 'Bearer [access_token value]'.",
      "type" : "apiKey",
      "name" : "authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "AccessTokenResponse" : {
      "type" : "object",
      "properties" : {
        "access_token" : {
          "type" : "string"
        },
        "token_type" : {
          "type" : "string"
        },
        "expires_in" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AccountReference" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "href" : {
          "type" : "string"
        },
        "customerId" : {
          "type" : "string"
        }
      }
    },
    "Acl" : {
      "type" : "object",
      "properties" : {
        "resourceId" : {
          "type" : "string"
        },
        "resourceType" : {
          "type" : "string"
        },
        "permissionSet" : {
          "type" : "string"
        },
        "accessPolicyId" : {
          "type" : "string"
        },
        "policies" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "why" : {
          "type" : "string"
        }
      }
    },
    "AclResponseList" : {
      "type" : "object",
      "properties" : {
        "totalRecords" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortBy" : {
          "type" : "string"
        },
        "direction" : {
          "type" : "string"
        },
        "filter" : {
          "$ref" : "#/definitions/FilterRequest"
        },
        "warnings" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Acl"
          }
        },
        "links" : {
          "$ref" : "#/definitions/ListLink"
        },
        "filterRequest" : {
          "$ref" : "#/definitions/FilterRequest"
        }
      }
    },
    "Duration" : {
      "type" : "object",
      "properties" : {
        "seconds" : {
          "type" : "integer",
          "format" : "int64"
        },
        "zero" : {
          "type" : "boolean"
        },
        "nano" : {
          "type" : "integer",
          "format" : "int32"
        },
        "negative" : {
          "type" : "boolean"
        },
        "units" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TemporalUnit"
          }
        }
      }
    },
    "FilterRequest" : {
      "type" : "object",
      "properties" : {
        "and" : {
          "type" : "boolean",
          "example" : true
        },
        "or" : {
          "type" : "boolean",
          "example" : false
        },
        "filters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OperationRequest"
          }
        },
        "subfilters" : {
          "type" : "array",
          "example" : "[{\"and\":true,\"operations\":\"More filters can go here (recursive)\"}]",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "InstalledProductInfo" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "copyright" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "buildDate" : {
          "type" : "string"
        }
      }
    },
    "ListLink" : {
      "type" : "object",
      "properties" : {
        "prev" : {
          "type" : "string"
        },
        "next" : {
          "type" : "string"
        }
      }
    },
    "LocalTime" : {
      "type" : "object",
      "properties" : {
        "hour" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minute" : {
          "type" : "integer",
          "format" : "int32"
        },
        "second" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nano" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "LoginRequest" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "OperationRequest" : {
      "type" : "object",
      "required" : [ "operator" ],
      "properties" : {
        "fieldName" : {
          "type" : "string",
          "example" : "id"
        },
        "object" : {
          "type" : "string",
          "example" : "jobConfig"
        },
        "operator" : {
          "type" : "string",
          "example" : "=",
          "enum" : [ "\"=\"", "\"eq\"", "\"!=\"", "\"ne\"", "\"<\"", "\"lt\"", "\"<=\"", "\"lte\"", "\">\"", "\"gt\"", "\">=\"", "\"gte\"", "\"subquery\"", "\"in\"", "\"!in\"", "\"null\"", "\"!null\"", "\"contains\"", "\"!contains\"", "\"none\"" ]
        },
        "value" : {
          "type" : "object",
          "example" : "value"
        },
        "values" : {
          "type" : "array",
          "example" : "[1,2]",
          "uniqueItems" : true,
          "items" : {
            "type" : "object"
          }
        },
        "in" : {
          "$ref" : "#/definitions/FilterRequest"
        },
        "date" : {
          "type" : "string"
        }
      }
    },
    "Reference" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "href" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "ResourceListResponse" : {
      "type" : "object",
      "properties" : {
        "totalRecords" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortBy" : {
          "type" : "string"
        },
        "direction" : {
          "type" : "string"
        },
        "filter" : {
          "$ref" : "#/definitions/FilterRequest"
        },
        "warnings" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ResourceResponse"
          }
        },
        "links" : {
          "$ref" : "#/definitions/ListLink"
        },
        "filterRequest" : {
          "$ref" : "#/definitions/FilterRequest"
        }
      }
    },
    "ResourceRequest" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ResourceResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "href" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdByUser" : {
          "$ref" : "#/definitions/Reference"
        },
        "lastModified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastModifiedByUser" : {
          "$ref" : "#/definitions/Reference"
        },
        "allowed" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "account" : {
          "$ref" : "#/definitions/AccountReference"
        },
        "user" : {
          "$ref" : "#/definitions/Reference"
        }
      }
    },
    "ScheduleRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "cron", "interval" ]
        },
        "cronSchedule" : {
          "type" : "string"
        },
        "intervalFrequency" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "timeZone" : {
          "$ref" : "#/definitions/TimeZone"
        },
        "webhookConfig" : {
          "$ref" : "#/definitions/WebhookConfig"
        }
      }
    },
    "ScheduleResponse" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "cronSchedule" : {
          "type" : "string"
        },
        "intervalFrequency" : {
          "type" : "string"
        },
        "nextFireTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "description" : {
          "type" : "string"
        },
        "timeZone" : {
          "$ref" : "#/definitions/TimeZone"
        },
        "timeZoneDisplayName" : {
          "type" : "string"
        },
        "timeZoneShortId" : {
          "type" : "string"
        },
        "timeZoneOffset" : {
          "$ref" : "#/definitions/ZoneOffset"
        },
        "resourceId" : {
          "type" : "string"
        },
        "resourceType" : {
          "type" : "string"
        },
        "webhookConfig" : {
          "$ref" : "#/definitions/WebhookConfig"
        }
      }
    },
    "ScheduleResponseList" : {
      "type" : "object",
      "properties" : {
        "totalRecords" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortBy" : {
          "type" : "string"
        },
        "direction" : {
          "type" : "string"
        },
        "filter" : {
          "$ref" : "#/definitions/FilterRequest"
        },
        "warnings" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ScheduleResponse"
          }
        },
        "links" : {
          "$ref" : "#/definitions/ListLink"
        },
        "filterRequest" : {
          "$ref" : "#/definitions/FilterRequest"
        }
      }
    },
    "TemporalUnit" : {
      "type" : "object",
      "properties" : {
        "durationEstimated" : {
          "type" : "boolean"
        },
        "duration" : {
          "$ref" : "#/definitions/Duration"
        },
        "timeBased" : {
          "type" : "boolean"
        },
        "dateBased" : {
          "type" : "boolean"
        }
      }
    },
    "TimeZone" : {
      "type" : "object",
      "properties" : {
        "displayName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "dstsavings" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rawOffset" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "WebhookConfig" : {
      "type" : "object",
      "properties" : {
        "method" : {
          "type" : "string"
        },
        "endpoint" : {
          "type" : "string"
        },
        "payload" : {
          "type" : "string"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "lastExecutionStatusCode" : {
          "type" : "string"
        },
        "lastExecutionMessage" : {
          "type" : "string"
        },
        "lastExecutionTime" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ZoneOffset" : {
      "type" : "object",
      "properties" : {
        "totalSeconds" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "string"
        },
        "rules" : {
          "$ref" : "#/definitions/ZoneRules"
        }
      }
    },
    "ZoneOffsetTransition" : {
      "type" : "object",
      "properties" : {
        "offsetBefore" : {
          "$ref" : "#/definitions/ZoneOffset"
        },
        "offsetAfter" : {
          "$ref" : "#/definitions/ZoneOffset"
        },
        "instant" : {
          "type" : "integer",
          "format" : "int64"
        },
        "overlap" : {
          "type" : "boolean"
        },
        "duration" : {
          "$ref" : "#/definitions/Duration"
        },
        "gap" : {
          "type" : "boolean"
        },
        "dateTimeAfter" : {
          "type" : "string",
          "format" : "date-time"
        },
        "dateTimeBefore" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ZoneOffsetTransitionRule" : {
      "type" : "object",
      "properties" : {
        "month" : {
          "type" : "string",
          "enum" : [ "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" ]
        },
        "timeDefinition" : {
          "type" : "string",
          "enum" : [ "UTC", "WALL", "STANDARD" ]
        },
        "standardOffset" : {
          "$ref" : "#/definitions/ZoneOffset"
        },
        "offsetBefore" : {
          "$ref" : "#/definitions/ZoneOffset"
        },
        "offsetAfter" : {
          "$ref" : "#/definitions/ZoneOffset"
        },
        "dayOfWeek" : {
          "type" : "string",
          "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
        },
        "dayOfMonthIndicator" : {
          "type" : "integer",
          "format" : "int32"
        },
        "localTime" : {
          "$ref" : "#/definitions/LocalTime"
        },
        "midnightEndOfDay" : {
          "type" : "boolean"
        }
      }
    },
    "ZoneRules" : {
      "type" : "object",
      "properties" : {
        "fixedOffset" : {
          "type" : "boolean"
        },
        "transitions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ZoneOffsetTransition"
          }
        },
        "transitionRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ZoneOffsetTransitionRule"
          }
        }
      }
    }
  }
}